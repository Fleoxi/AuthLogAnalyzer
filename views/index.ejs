<!DOCTYPE html>
<html lang="fr">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>IP Tracker</title>

        <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
        <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
        <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
    </head>
    <body class="bg-gray-100">
        <div class="sticky top-0 z-40">
            <div class="w-full h-20 px-6 bg-gray-100 border-b flex items-center justify-between">
                <h1 class="font-semibold text-2xl text-gray-800 pl-4">IP Tracker</h1>
            </div>
        </div>

        <div id="home" class="container mx-auto my-8">
            <div class="max-w rounded overflow-hidden shadow-lg mb-8">
                <div class="px-6 py-4">
                    <div class="font-bold text-xl mb-2">Analyser un fichier</div>
                    <p class="text-gray-700 text-base">
                        <form action="/upload" method="post" enctype="multipart/form-data" class="mt-4">
                            <input type="file" name="authLog" id="authLog" class="border border-gray-400 p-2 rounded">
                            <div>
                                <button type="submit" class="mt-2 bg-blue-500 text-white font-semibold py-2 px-4 rounded">Lancer l'analyse</button>
                            </div>
                        </form>
                    </p>
                </div>
            </div>

            <div class="max-w rounded overflow-hidden shadow-lg mb-8">
                <div class="px-6 py-4">
                    <div class="font-bold text-xl mb-2">Carte des tentatives</div>
                    <div id="map" style="height: 500px"></div>
                </div>
            </div>

            <div class="grid grid-cols-2 gap-2 mb-8">
                <div class="max-w rounded overflow-hidden shadow-lg">
                    <div class="px-6 py-4">
                        <div class="font-bold text-xl mb-2">Statistiques</div>
                        <p class="text-gray-700 text-base">
                            <table class="table-auto w-full">
                                <thead>
                                    <tr>
                                        <th>Adresse IP</th>
                                        <th>Ville</th>
                                        <th>Nombre de tentatives</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% groupedLocations.forEach((location) => { %>
                                        <tr>
                                            <td><%= location.ip %></td>
                                            <td class="text-center"><%= location.location.city %></td>
                                            <td class="text-center"><%= location.location.count %> fois</td>
                                        </tr>
                                    <% }); %>
                                </tbody>
                            </table>
                        </p>
                    </div>
                </div>
                <div class="max-w rounded overflow-hidden shadow-lg">
                    <div class="px-6 py-4">
                        <div class="font-bold text-xl mb-2">Graphique</div>
                        <canvas id="chart"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.3.1/socket.io.js"></script>
        <script>
            const chartData = {
                labels: [<% groupedLocations.forEach((group) => { %>"<%= group.ip %>",<% }) %>],
                datasets: [
                    {
                        label: 'Nombre de tentatives',
                        data: [<% groupedLocations.forEach((group) => { %><%= group.location.count %>,<% }) %>],
                        backgroundColor: 'rgba(54, 162, 235, 0.5)',
                        borderColor: 'rgba(54, 162, 235, 1)',
                        borderWidth: 1,
                    },
                ],
            };
        
            const ctx = document.getElementById('chart').getContext('2d');
            const myChart = new Chart(ctx, {
                type: 'bar',
                data: chartData,
                options: {
                    scales: {
                        y: {
                            beginAtZero: true,
                        },
                    },
                },
            });
        </script>

        <script>
            function getColor(attempts, maxAttempts)
            {
                const greenColor = [0, 255, 0];
                const redColor = [255, 0, 0];
            
                const ratio = attempts / maxAttempts;
                const color = greenColor.map((value, index) => value + ratio * (redColor[index] - value));

                return `rgb(${color.join(',')})`;
            }

            const map = L.map('map').setView([0, 0], 2);
        
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
            }).addTo(map);
        
            const cities = [<% groupedLocations.forEach((group) => { %>{ip: `<%= group.ip %>`, marker: [<%= group.location.latitude %>, <%= group.location.longitude %>], title: `<%= group.location.city %>`, count: <%= group.location.count %>},<% }) %>]
            const maxAttempts = cities.reduce((max, location) => Math.max(max, location.count), 1);

            cities.forEach((city) => {
                const iconColor = this.getColor(city.count, maxAttempts);
                const markerIcon = L.divIcon({
                    className: 'custom-icon',
                    html: `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" width="32" height="32" fill="${iconColor}"><path d="M12 0c-4.962 0-9 4.037-9 9 0 5.25 7.143 14.787 8.208 15.933.214.293.579.293.793 0 1.065-1.146 8.207-10.683 8.207-15.933 0-4.963-4.038-9-9-9zm0 13c-1.654 0-3-1.346-3-3s1.346-3 3-3 3 1.346 3 3-1.346 3-3 3z"/></svg>`,
                    iconSize: [32, 32]
                });

                L.marker(city.marker, {title: city.title, clickable: true, weight: city.count, icon: markerIcon}).addTo(map).bindPopup(`<b>${city.ip}</b><br /><b>Zone:</b> ${city.title} - <b>Tentatives:</b> ${city.count}`);
            });
          </script>
    </body>
</html>